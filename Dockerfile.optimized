# Run the build stage on the build platform
FROM --platform=$BUILDPLATFORM docker.io/golang:1.25.2-alpine3.22 AS builder

# Configure GO compiler to user target architecture and platform, this is significantly faster for cross-compiling than using emulation
ARG TARGETARCH
ENV CGO_ENABLED=0 \
    GOOS=linux \
    GOARCH=${TARGETARCH}

# Download dependencies first to leverage Docker layer caching
COPY ./go.* ./
RUN go mod download

# Copy often-chaning source code later on to maximize layer caching
COPY ./ ./

# Build the Go application with optimizations to reduce binary size
RUN go build -ldflags="-s -w" -o /app

# Use a minimal base image to run the application, Googles Distroless sets up a basic filesystem without package manager or shell, 
# but includes CA certificates for HTTPS traffic among other things
FROM gcr.io/distroless/static
COPY --from=builder /app /app
USER 1000
ENTRYPOINT ["/app"]